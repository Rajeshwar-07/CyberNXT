package com.ems.exception;


import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.context.request.WebRequest;

import jakarta.validation.ConstraintViolationException;

@RestControllerAdvice
public class GlobalExceptionHandler{

	@ExceptionHandler(ConstraintViolationException.class)
    public ResponseEntity<Object> handleConstraintViolationException(ConstraintViolationException ex, WebRequest request) {
       List<Map<String,String>> errors = ex.getConstraintViolations().stream()
    		   .map(e -> {
    			   Map<String,String> error = new HashMap<>();
    			   error.put(e.getPropertyPath().toString(), e.getMessageTemplate());
    			   return error;
    		   }).collect(Collectors.toList());
        
       Map<String, Object> response = new HashMap<>();
       response.put("errors", errors);
       return new ResponseEntity<>(response,HttpStatus.BAD_REQUEST);
    }
	
//	@ExceptionHandler(ConstraintViolationException.class)
//    public ResponseEntity<ErrorDetails> handleConstraintViolationException(ConstraintViolationException ex, WebRequest request) {
//        ErrorDetails errorDetails = new ErrorDetails();
//        errorDetails.setMessage("Validation failed for employee data");
//        errorDetails.setDetails(ex.getMessage()); // Optionally, you can customize the message here
//        return new ResponseEntity<>(errorDetails, HttpStatus.BAD_REQUEST); // You can adjust the HttpStatus as needed
//    }

//	@ExceptionHandler(ResourcenotFoundException.class)
//	public final ResponseEntity<ErrorDetails> handleResourcenotFoundException(Exception ex) {
//		Map<String,String> map = new HashMap<>();
//		map.put(ex.getMessage(), ex.getClass());
//		ErrorDetails errorDetails = new ErrorDetails(ex.getMessage(), request.getDescription(false));
//		return new ResponseEntity<>(errorDetails, HttpStatus.NOT_FOUND);
//	}
}
