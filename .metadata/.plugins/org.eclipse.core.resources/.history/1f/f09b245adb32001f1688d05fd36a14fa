package com.ems.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import com.ems.entity.Employee;
import com.ems.service.EmployeeService;

@Controller
@RequestMapping("/employees")
public class EmployeeController {

    private final EmployeeService employeeService;

    public EmployeeController(EmployeeService employeeService) {
        this.employeeService = employeeService;
    }

    @GetMapping(produces = "text/html")
    public String listEmployeesView(Model model) {
        model.addAttribute("employees", employeeService.getEmployeeList());
        return "employees";
    }

    @GetMapping(produces = "application/json")
    @ResponseBody
    public ResponseEntity<List<Employee>> listEmployeesJson() {
        List<Employee> employees = employeeService.getEmployeeList();
        return new ResponseEntity<>(employees, HttpStatus.OK);
    }

    @GetMapping("/new")
    public String createEmployeeForm(Model model) {
        Employee employee = new Employee();
        model.addAttribute("employee", employee);
        return "create_employee";
    }

    @PostMapping
    public ResponseEntity<Employee> saveEmployee(@RequestBody Employee employee) {
        Employee saveEmployee = employeeService.createEmployee(employee);
//        return "redirect:/create_employee";
        return new ResponseEntity<T>(saveEmployee, HttpStatus.OK);
    }

    @GetMapping("/{id}")
    public String getEmployeeById(@PathVariable Integer id, Model model) {
        Employee employee = employeeService.findEmployee(id);
        model.addAttribute("employee", employee);
        return "employee_detail";
    }

    @GetMapping("/{id}/edit")
    public String editEmployeeForm(@PathVariable Integer id, Model model) {
        Employee employee = employeeService.findEmployee(id);
        model.addAttribute("employee", employee);
        return "edit_employee"; 
    }

    @PostMapping("/{id}/update")
    public String updateEmployee(@PathVariable Integer id, Employee employee) {
        employeeService.updateEmployee(employee, id);
        return "redirect:/employees";
    }

    @PostMapping("/{id}/delete")
    public String deleteEmployee(@PathVariable Integer id) {
        employeeService.deleteEmployee(id);
        return "redirect:/employees";
    }
}
